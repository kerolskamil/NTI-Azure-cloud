{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "virtualNetworks_VNet1_name": {
            "defaultValue": "VNet1",
            "type": "String"
        },
        "virtualNetworks_VNet2_name": {
            "defaultValue": "VNet2",
            "type": "String"
        },
        "routeTables_Firewall_RT_name": {
            "defaultValue": "Firewall-RT",
            "type": "String"
        },
        "publicIPAddresses_FW_PIP_name": {
            "defaultValue": "FW-PIP",
            "type": "String"
        },
        "storageAccounts_soragexx_name": {
            "defaultValue": "soragexx",
            "type": "String"
        },
        "virtualMachines_vm_web_01_name": {
            "defaultValue": "vm-web-01",
            "type": "String"
        },
        "virtualMachines_vm_web_02_name": {
            "defaultValue": "vm-web-02",
            "type": "String"
        },
        "bastionHosts_VNet1_Bastion_name": {
            "defaultValue": "VNet1-Bastion",
            "type": "String"
        },
        "privateDnsZones_project_com_name": {
            "defaultValue": "project.com",
            "type": "String"
        },
        "virtualMachines_vm_jumper_01_name": {
            "defaultValue": "vm-jumper-01",
            "type": "String"
        },
        "azureFirewalls_Firewal_VNet2_name": {
            "defaultValue": "Firewal-VNet2",
            "type": "String"
        },
        "loadBalancers_MyLoadBalancer_name": {
            "defaultValue": "MyLoadBalancer",
            "type": "String"
        },
        "networkSecurityGroups_my_nsg_name": {
            "defaultValue": "my-nsg",
            "type": "String"
        },
        "firewallPolicies_FW_policy_01_name": {
            "defaultValue": "FW-policy-01",
            "type": "String"
        },
        "networkInterfaces_vm_web_01944_name": {
            "defaultValue": "vm-web-01944",
            "type": "String"
        },
        "networkInterfaces_vm_web_02828_name": {
            "defaultValue": "vm-web-02828",
            "type": "String"
        },
        "vaults_vault_lvr997me_name": {
            "defaultValue": "vault-lvr997me",
            "type": "String"
        },
        "networkInterfaces_vm_jumper_01565_name": {
            "defaultValue": "vm-jumper-01565",
            "type": "String"
        },
        "publicIPAddresses_vnet1_bastion_pip_name": {
            "defaultValue": "vnet1-bastion-pip",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Network/firewallPolicies",
            "apiVersion": "2023-09-01",
            "name": "[parameters('firewallPolicies_FW_policy_01_name')]",
            "location": "eastus",
            "properties": {
                "sku": {
                    "tier": "Standard"
                },
                "threatIntelMode": "Alert"
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2023-09-01",
            "name": "[parameters('networkSecurityGroups_my_nsg_name')]",
            "location": "eastus",
            "properties": {
                "securityRules": [
                    {
                        "name": "AllowStorage",
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_my_nsg_name'), 'AllowStorage')]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "Storage",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowRDP",
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_my_nsg_name'), 'AllowRDP')]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 110,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2018-09-01",
            "name": "[parameters('privateDnsZones_project_com_name')]",
            "location": "global",
            "properties": {
                "maxNumberOfRecordSets": 25000,
                "maxNumberOfVirtualNetworkLinks": 1000,
                "maxNumberOfVirtualNetworkLinksWithRegistration": 100,
                "numberOfRecordSets": 5,
                "numberOfVirtualNetworkLinks": 1,
                "numberOfVirtualNetworkLinksWithRegistration": 1,
                "provisioningState": "Succeeded"
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2023-09-01",
            "name": "[parameters('publicIPAddresses_FW_PIP_name')]",
            "location": "eastus",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "ipAddress": "172.191.63.238",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2023-09-01",
            "name": "[parameters('publicIPAddresses_vnet1_bastion_pip_name')]",
            "location": "eastus",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "ipAddress": "13.92.82.116",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": [],
                "ddosSettings": {
                    "protectionMode": "VirtualNetworkInherited"
                }
            }
        },
        {
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "2023-09-01",
            "name": "[parameters('routeTables_Firewall_RT_name')]",
            "location": "eastus",
            "properties": {
                "disableBgpRoutePropagation": false,
                "routes": [
                    {
                        "name": "FW-DG",
                        "id": "[resourceId('Microsoft.Network/routeTables/routes', parameters('routeTables_Firewall_RT_name'), 'FW-DG')]",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "10.20.20.4",
                            "hasBgpOverride": false
                        },
                        "type": "Microsoft.Network/routeTables/routes"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.RecoveryServices/vaults",
            "apiVersion": "2024-01-01",
            "name": "[parameters('vaults_vault_lvr997me_name')]",
            "location": "eastus",
            "sku": {
                "name": "RS0",
                "tier": "Standard"
            },
            "properties": {
                "securitySettings": {
                    "softDeleteSettings": {
                        "softDeleteRetentionPeriodInDays": 0,
                        "softDeleteState": "Enabled",
                        "enhancedSecurityState": "Enabled"
                    },
                    "multiUserAuthorization": "Disabled"
                },
                "redundancySettings": {
                    "standardTierStorageRedundancy": "GeoRedundant",
                    "crossRegionRestore": "Disabled"
                },
                "publicNetworkAccess": "Enabled",
                "restoreSettings": {
                    "crossSubscriptionRestoreSettings": {
                        "crossSubscriptionRestoreState": "Enabled"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2023-03-01",
            "name": "[parameters('virtualMachines_vm_jumper_01_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_vm_jumper_01565_name'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_D2s_v3"
                },
                "additionalCapabilities": {
                    "hibernationEnabled": false
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2019-datacenter-gensecond",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Windows",
                        "name": "[concat(parameters('virtualMachines_vm_jumper_01_name'), '_disk1_4150797961414133abb8dd9c54efc852')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS",
                            "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('virtualMachines_vm_jumper_01_name'), '_disk1_4150797961414133abb8dd9c54efc852'))]"
                        },
                        "deleteOption": "Delete",
                        "diskSizeGB": 127
                    },
                    "dataDisks": [],
                    "diskControllerType": "SCSI"
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachines_vm_jumper_01_name')]",
                    "adminUsername": "LocalAdmin",
                    "windowsConfiguration": {
                        "provisionVMAgent": true,
                        "enableAutomaticUpdates": true,
                        "patchSettings": {
                            "patchMode": "AutomaticByOS",
                            "assessmentMode": "ImageDefault",
                            "enableHotpatching": false
                        },
                        "enableVMAgentPlatformUpdates": false
                    },
                    "secrets": [],
                    "allowExtensionOperations": true,
                    "requireGuestProvisionSignal": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_vm_jumper_01565_name'))]",
                            "properties": {
                                "deleteOption": "Detach"
                            }
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2023-03-01",
            "name": "[parameters('virtualMachines_vm_web_01_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_vm_web_01944_name'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_B1s"
                },
                "additionalCapabilities": {
                    "hibernationEnabled": false
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2019-datacenter-gensecond",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Windows",
                        "name": "[concat(parameters('virtualMachines_vm_web_01_name'), '_disk1_d6abcac201124f41aba3392ce8c25bfc')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS",
                            "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('virtualMachines_vm_web_01_name'), '_disk1_d6abcac201124f41aba3392ce8c25bfc'))]"
                        },
                        "deleteOption": "Delete",
                        "diskSizeGB": 127
                    },
                    "dataDisks": [],
                    "diskControllerType": "SCSI"
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachines_vm_web_01_name')]",
                    "adminUsername": "LocalAdmin",
                    "windowsConfiguration": {
                        "provisionVMAgent": true,
                        "enableAutomaticUpdates": true,
                        "patchSettings": {
                            "patchMode": "AutomaticByOS",
                            "assessmentMode": "ImageDefault",
                            "enableHotpatching": false
                        },
                        "enableVMAgentPlatformUpdates": false
                    },
                    "secrets": [],
                    "allowExtensionOperations": true,
                    "requireGuestProvisionSignal": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_vm_web_01944_name'))]",
                            "properties": {
                                "deleteOption": "Detach"
                            }
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2023-03-01",
            "name": "[parameters('virtualMachines_vm_web_02_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_vm_web_02828_name'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_DS1_v2"
                },
                "additionalCapabilities": {
                    "hibernationEnabled": false
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2019-datacenter-gensecond",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Windows",
                        "name": "[concat(parameters('virtualMachines_vm_web_02_name'), '_disk1_8fb50e5679d74bd0bbba8af7ec838c94')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS",
                            "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('virtualMachines_vm_web_02_name'), '_disk1_8fb50e5679d74bd0bbba8af7ec838c94'))]"
                        },
                        "deleteOption": "Delete",
                        "diskSizeGB": 127
                    },
                    "dataDisks": [],
                    "diskControllerType": "SCSI"
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachines_vm_web_02_name')]",
                    "adminUsername": "LocalAdmin",
                    "windowsConfiguration": {
                        "provisionVMAgent": true,
                        "enableAutomaticUpdates": true,
                        "patchSettings": {
                            "patchMode": "AutomaticByOS",
                            "assessmentMode": "ImageDefault",
                            "enableHotpatching": false
                        },
                        "enableVMAgentPlatformUpdates": false
                    },
                    "secrets": [],
                    "allowExtensionOperations": true,
                    "requireGuestProvisionSignal": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_vm_web_02828_name'))]",
                            "properties": {
                                "deleteOption": "Detach"
                            }
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true
                    }
                }
            }
        },
        {
            "type": "Microsoft.Network/firewallPolicies/ruleCollectionGroups",
            "apiVersion": "2023-09-01",
            "name": "[concat(parameters('firewallPolicies_FW_policy_01_name'), '/DefaultApplicationRuleCollectionGroup')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/firewallPolicies', parameters('firewallPolicies_FW_policy_01_name'))]"
            ],
            "properties": {
                "priority": 300,
                "ruleCollections": [
                    {
                        "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
                        "action": {
                            "type": "Allow"
                        },
                        "rules": [
                            {
                                "ruleType": "ApplicationRule",
                                "name": "Alllow-Google",
                                "protocols": [
                                    {
                                        "protocolType": "Http",
                                        "port": 80
                                    }
                                ],
                                "fqdnTags": [],
                                "webCategories": [],
                                "targetFqdns": [
                                    "*.google.com"
                                ],
                                "targetUrls": [],
                                "terminateTLS": false,
                                "sourceAddresses": [
                                    "10.20.10.0/24"
                                ],
                                "destinationAddresses": [],
                                "sourceIpGroups": [],
                                "httpHeadersToInsert": []
                            },
                            {
                                "ruleType": "ApplicationRule",
                                "name": "Allow-MS",
                                "protocols": [
                                    {
                                        "protocolType": "Http",
                                        "port": 80
                                    }
                                ],
                                "fqdnTags": [],
                                "webCategories": [],
                                "targetFqdns": [
                                    "www.microsoft.com"
                                ],
                                "targetUrls": [],
                                "terminateTLS": false,
                                "sourceAddresses": [
                                    "10.20.10.0/24"
                                ],
                                "destinationAddresses": [],
                                "sourceIpGroups": [],
                                "httpHeadersToInsert": []
                            }
                        ],
                        "name": "APP-Col-01",
                        "priority": 200
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/firewallPolicies/ruleCollectionGroups",
            "apiVersion": "2023-09-01",
            "name": "[concat(parameters('firewallPolicies_FW_policy_01_name'), '/DefaultDnatRuleCollectionGroup')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/firewallPolicies', parameters('firewallPolicies_FW_policy_01_name'))]"
            ],
            "properties": {
                "priority": 100,
                "ruleCollections": [
                    {
                        "ruleCollectionType": "FirewallPolicyNatRuleCollection",
                        "action": {
                            "type": "Dnat"
                        },
                        "rules": [
                            {
                                "ruleType": "NatRule",
                                "name": "Allow-LB",
                                "translatedAddress": "10.20.40.100",
                                "translatedPort": "80",
                                "ipProtocols": [
                                    "TCP"
                                ],
                                "sourceAddresses": [
                                    "*"
                                ],
                                "sourceIpGroups": [],
                                "destinationAddresses": [
                                    "172.191.63.238"
                                ],
                                "destinationPorts": [
                                    "80"
                                ]
                            }
                        ],
                        "name": "DNAT-Col-01",
                        "priority": 200
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/firewallPolicies/ruleCollectionGroups",
            "apiVersion": "2023-09-01",
            "name": "[concat(parameters('firewallPolicies_FW_policy_01_name'), '/DefaultNetworkRuleCollectionGroup')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/firewallPolicies', parameters('firewallPolicies_FW_policy_01_name'))]"
            ],
            "properties": {
                "priority": 200,
                "ruleCollections": [
                    {
                        "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
                        "action": {
                            "type": "Allow"
                        },
                        "rules": [
                            {
                                "ruleType": "NetworkRule",
                                "name": "Allow-DNS",
                                "ipProtocols": [
                                    "UDP"
                                ],
                                "sourceAddresses": [
                                    "10.20.10.0/24"
                                ],
                                "sourceIpGroups": [],
                                "destinationAddresses": [
                                    "209.244.0.3",
                                    "209.244.0.4"
                                ],
                                "destinationIpGroups": [],
                                "destinationFqdns": [],
                                "destinationPorts": [
                                    "53"
                                ]
                            }
                        ],
                        "name": "Net-Coll-01",
                        "priority": 200
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "apiVersion": "2023-09-01",
            "name": "[parameters('loadBalancers_MyLoadBalancer_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VNet2_name'), 'LBSub')]"
            ],
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "[concat(parameters('loadBalancers_MyLoadBalancer_name'), '-PIP')]",
                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_MyLoadBalancer_name')), concat('/frontendIPConfigurations/', parameters('loadBalancers_MyLoadBalancer_name'), '-PIP'))]",
                        "properties": {
                            "privateIPAddress": "10.20.40.100",
                            "privateIPAllocationMethod": "Static",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VNet2_name'), 'LBSub')]"
                            },
                            "privateIPAddressVersion": "IPv4"
                        },
                        "zones": [
                            "2",
                            "1",
                            "3"
                        ]
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "MyWebBackendPool",
                        "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_MyLoadBalancer_name'), 'MyWebBackendPool')]",
                        "properties": {
                            "loadBalancerBackendAddresses": [
                                {
                                    "name": "RG1_vm-web-01944ipconfig1",
                                    "properties": {}
                                },
                                {
                                    "name": "RG1_vm-web-02828ipconfig1",
                                    "properties": {}
                                }
                            ]
                        }
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "Rule-01",
                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_MyLoadBalancer_name')), '/loadBalancingRules/Rule-01')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_MyLoadBalancer_name')), concat('/frontendIPConfigurations/', parameters('loadBalancers_MyLoadBalancer_name'), '-PIP'))]"
                            },
                            "frontendPort": 80,
                            "backendPort": 80,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 4,
                            "protocol": "Tcp",
                            "enableTcpReset": false,
                            "loadDistribution": "Default",
                            "disableOutboundSnat": true,
                            "backendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_MyLoadBalancer_name'), 'MyWebBackendPool')]"
                            },
                            "backendAddressPools": [
                                {
                                    "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_MyLoadBalancer_name'), 'MyWebBackendPool')]"
                                }
                            ],
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_MyLoadBalancer_name')), '/probes/MyHealthProbe')]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "MyHealthProbe",
                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_MyLoadBalancer_name')), '/probes/MyHealthProbe')]",
                        "properties": {
                            "protocol": "Tcp",
                            "port": 80,
                            "intervalInSeconds": 5,
                            "numberOfProbes": 1,
                            "probeThreshold": 1
                        }
                    }
                ],
                "inboundNatRules": [],
                "outboundRules": [],
                "inboundNatPools": []
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers/backendAddressPools",
            "apiVersion": "2023-09-01",
            "name": "[concat(parameters('loadBalancers_MyLoadBalancer_name'), '/MyWebBackendPool')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_MyLoadBalancer_name'))]"
            ],
            "properties": {
                "loadBalancerBackendAddresses": [
                    {
                        "name": "RG1_vm-web-01944ipconfig1",
                        "properties": {}
                    },
                    {
                        "name": "RG1_vm-web-02828ipconfig1",
                        "properties": {}
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2023-09-01",
            "name": "[concat(parameters('networkSecurityGroups_my_nsg_name'), '/AllowRDP')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_my_nsg_name'))]"
            ],
            "properties": {
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "3389",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 110,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2023-09-01",
            "name": "[concat(parameters('networkSecurityGroups_my_nsg_name'), '/AllowStorage')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_my_nsg_name'))]"
            ],
            "properties": {
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "VirtualNetwork",
                "destinationAddressPrefix": "Storage",
                "access": "Allow",
                "priority": 100,
                "direction": "Outbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/A",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZones_project_com_name'), '/gsa-8bd0f879-b805000000')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_project_com_name'))]"
            ],
            "properties": {
                "ttl": 10,
                "aRecords": [
                    {
                        "ipv4Address": "10.20.20.5"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/A",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZones_project_com_name'), '/gsa-8bd0f879-b805000003')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_project_com_name'))]"
            ],
            "properties": {
                "ttl": 10,
                "aRecords": [
                    {
                        "ipv4Address": "10.20.20.8"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/A",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZones_project_com_name'), '/vm-web-01')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_project_com_name'))]"
            ],
            "properties": {
                "ttl": 10,
                "aRecords": [
                    {
                        "ipv4Address": "10.20.10.40"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/A",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZones_project_com_name'), '/vm-web-02')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_project_com_name'))]"
            ],
            "properties": {
                "ttl": 10,
                "aRecords": [
                    {
                        "ipv4Address": "10.20.10.50"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/SOA",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZones_project_com_name'), '/@')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_project_com_name'))]"
            ],
            "properties": {
                "ttl": 3600,
                "soaRecord": {
                    "email": "azureprivatedns-host.microsoft.com",
                    "expireTime": 2419200,
                    "host": "azureprivatedns.net",
                    "minimumTtl": 10,
                    "refreshTime": 3600,
                    "retryTime": 300,
                    "serialNumber": 1
                }
            }
        },
        {
            "type": "Microsoft.Network/routeTables/routes",
            "apiVersion": "2023-09-01",
            "name": "[concat(parameters('routeTables_Firewall_RT_name'), '/FW-DG')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_Firewall_RT_name'))]"
            ],
            "properties": {
                "addressPrefix": "0.0.0.0/0",
                "nextHopType": "VirtualAppliance",
                "nextHopIpAddress": "10.20.20.4",
                "hasBgpOverride": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2023-09-01",
            "name": "[parameters('virtualNetworks_VNet1_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_VNet2_name'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.10.0.0/16"
                    ]
                },
                "encryption": {
                    "enabled": false,
                    "enforcement": "AllowUnencrypted"
                },
                "subnets": [
                    {
                        "name": "Subnet1",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VNet1_name'), 'Subnet1')]",
                        "properties": {
                            "addressPrefixes": [
                                "10.10.0.0/24"
                            ],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    },
                    {
                        "name": "AzureBastionSubnet",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VNet1_name'), 'AzureBastionSubnet')]",
                        "properties": {
                            "addressPrefixes": [
                                "10.10.1.0/26"
                            ],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled",
                            "defaultOutboundAccess": true
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    }
                ],
                "virtualNetworkPeerings": [
                    {
                        "name": "vnet1-to-vnet2",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/virtualNetworkPeerings', parameters('virtualNetworks_VNet1_name'), concat(parameters('virtualNetworks_VNet1_name'), '-to-vnet2'))]",
                        "properties": {
                            "peeringState": "Connected",
                            "peeringSyncLevel": "FullyInSync",
                            "remoteVirtualNetwork": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_VNet2_name'))]"
                            },
                            "allowVirtualNetworkAccess": true,
                            "allowForwardedTraffic": false,
                            "allowGatewayTransit": false,
                            "useRemoteGateways": false,
                            "doNotVerifyRemoteGateways": false,
                            "remoteAddressSpace": {
                                "addressPrefixes": [
                                    "10.20.0.0/16"
                                ]
                            },
                            "remoteVirtualNetworkAddressSpace": {
                                "addressPrefixes": [
                                    "10.20.0.0/16"
                                ]
                            }
                        },
                        "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings"
                    }
                ],
                "enableDdosProtection": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2023-09-01",
            "name": "[concat(parameters('virtualNetworks_VNet1_name'), '/AzureBastionSubnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_VNet1_name'))]"
            ],
            "properties": {
                "addressPrefixes": [
                    "10.10.1.0/26"
                ],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled",
                "defaultOutboundAccess": true
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2023-09-01",
            "name": "[concat(parameters('virtualNetworks_VNet2_name'), '/AzureFirewallSubnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_VNet2_name'))]"
            ],
            "properties": {
                "addressPrefixes": [
                    "10.20.20.0/26"
                ],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2023-09-01",
            "name": "[concat(parameters('virtualNetworks_VNet2_name'), '/GatewaySubnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_VNet2_name'))]"
            ],
            "properties": {
                "addressPrefixes": [
                    "10.20.30.0/24"
                ],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2023-09-01",
            "name": "[concat(parameters('virtualNetworks_VNet2_name'), '/LBSub')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_VNet2_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.20.40.0/24",
                "serviceEndpoints": [],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2023-09-01",
            "name": "[concat(parameters('virtualNetworks_VNet1_name'), '/Subnet1')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_VNet1_name'))]"
            ],
            "properties": {
                "addressPrefixes": [
                    "10.10.0.0/24"
                ],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.RecoveryServices/vaults/backupPolicies",
            "apiVersion": "2024-01-01",
            "name": "[concat(parameters('vaults_vault_lvr997me_name'), '/DailyPolicy-lvr997ye')]",
            "dependsOn": [
                "[resourceId('Microsoft.RecoveryServices/vaults', parameters('vaults_vault_lvr997me_name'))]"
            ],
            "properties": {
                "backupManagementType": "AzureStorage",
                "workLoadType": "AzureFileShare",
                "schedulePolicy": {
                    "schedulePolicyType": "SimpleSchedulePolicy",
                    "scheduleRunFrequency": "Daily",
                    "scheduleRunTimes": [
                        "2024-05-03T19:30:00Z"
                    ],
                    "scheduleWeeklyFrequency": 0
                },
                "retentionPolicy": {
                    "retentionPolicyType": "LongTermRetentionPolicy",
                    "dailySchedule": {
                        "retentionTimes": [
                            "2024-05-03T19:30:00Z"
                        ],
                        "retentionDuration": {
                            "count": 30,
                            "durationType": "Days"
                        }
                    }
                },
                "timeZone": "UTC",
                "protectedItemsCount": 0
            }
        },
        {
            "type": "Microsoft.RecoveryServices/vaults/backupPolicies",
            "apiVersion": "2024-01-01",
            "name": "[concat(parameters('vaults_vault_lvr997me_name'), '/DefaultPolicy')]",
            "dependsOn": [
                "[resourceId('Microsoft.RecoveryServices/vaults', parameters('vaults_vault_lvr997me_name'))]"
            ],
            "properties": {
                "backupManagementType": "AzureIaasVM",
                "instantRPDetails": {},
                "schedulePolicy": {
                    "schedulePolicyType": "SimpleSchedulePolicy",
                    "scheduleRunFrequency": "Daily",
                    "scheduleRunTimes": [
                        "2024-05-04T08:30:00Z"
                    ],
                    "scheduleWeeklyFrequency": 0
                },
                "retentionPolicy": {
                    "retentionPolicyType": "LongTermRetentionPolicy",
                    "dailySchedule": {
                        "retentionTimes": [
                            "2024-05-04T08:30:00Z"
                        ],
                        "retentionDuration": {
                            "count": 30,
                            "durationType": "Days"
                        }
                    }
                },
                "instantRpRetentionRangeInDays": 2,
                "timeZone": "UTC",
                "protectedItemsCount": 0
            }
        },
        {
            "type": "Microsoft.RecoveryServices/vaults/backupPolicies",
            "apiVersion": "2024-01-01",
            "name": "[concat(parameters('vaults_vault_lvr997me_name'), '/EnhancedPolicy')]",
            "dependsOn": [
                "[resourceId('Microsoft.RecoveryServices/vaults', parameters('vaults_vault_lvr997me_name'))]"
            ],
            "properties": {
                "backupManagementType": "AzureIaasVM",
                "policyType": "V2",
                "instantRPDetails": {},
                "schedulePolicy": {
                    "schedulePolicyType": "SimpleSchedulePolicyV2",
                    "scheduleRunFrequency": "Hourly",
                    "hourlySchedule": {
                        "interval": 4,
                        "scheduleWindowStartTime": "2024-05-04T08:00:00Z",
                        "scheduleWindowDuration": 12
                    }
                },
                "retentionPolicy": {
                    "retentionPolicyType": "LongTermRetentionPolicy",
                    "dailySchedule": {
                        "retentionTimes": [
                            "2024-05-04T08:00:00Z"
                        ],
                        "retentionDuration": {
                            "count": 30,
                            "durationType": "Days"
                        }
                    }
                },
                "instantRpRetentionRangeInDays": 2,
                "timeZone": "UTC",
                "protectedItemsCount": 0
            }
        },
        {
            "type": "Microsoft.RecoveryServices/vaults/backupPolicies",
            "apiVersion": "2024-01-01",
            "name": "[concat(parameters('vaults_vault_lvr997me_name'), '/HourlyLogBackup')]",
            "dependsOn": [
                "[resourceId('Microsoft.RecoveryServices/vaults', parameters('vaults_vault_lvr997me_name'))]"
            ],
            "properties": {
                "backupManagementType": "AzureWorkload",
                "workLoadType": "SQLDataBase",
                "settings": {
                    "timeZone": "UTC",
                    "issqlcompression": false,
                    "isCompression": false
                },
                "subProtectionPolicy": [
                    {
                        "policyType": "Full",
                        "schedulePolicy": {
                            "schedulePolicyType": "SimpleSchedulePolicy",
                            "scheduleRunFrequency": "Daily",
                            "scheduleRunTimes": [
                                "2024-05-04T08:30:00Z"
                            ],
                            "scheduleWeeklyFrequency": 0
                        },
                        "retentionPolicy": {
                            "retentionPolicyType": "LongTermRetentionPolicy",
                            "dailySchedule": {
                                "retentionTimes": [
                                    "2024-05-04T08:30:00Z"
                                ],
                                "retentionDuration": {
                                    "count": 30,
                                    "durationType": "Days"
                                }
                            }
                        }
                    },
                    {
                        "policyType": "Log",
                        "schedulePolicy": {
                            "schedulePolicyType": "LogSchedulePolicy",
                            "scheduleFrequencyInMins": 60
                        },
                        "retentionPolicy": {
                            "retentionPolicyType": "SimpleRetentionPolicy",
                            "retentionDuration": {
                                "count": 30,
                                "durationType": "Days"
                            }
                        }
                    }
                ],
                "protectedItemsCount": 0
            }
        },
        {
            "type": "Microsoft.RecoveryServices/vaults/replicationAlertSettings",
            "apiVersion": "2023-08-01",
            "name": "[concat(parameters('vaults_vault_lvr997me_name'), '/defaultAlertSetting')]",
            "dependsOn": [
                "[resourceId('Microsoft.RecoveryServices/vaults', parameters('vaults_vault_lvr997me_name'))]"
            ],
            "properties": {
                "sendToOwners": "DoNotSend",
                "customEmailAddresses": []
            }
        },
        {
            "type": "Microsoft.RecoveryServices/vaults/replicationVaultSettings",
            "apiVersion": "2023-08-01",
            "name": "[concat(parameters('vaults_vault_lvr997me_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.RecoveryServices/vaults', parameters('vaults_vault_lvr997me_name'))]"
            ],
            "properties": {}
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2023-04-01",
            "name": "[parameters('storageAccounts_soragexx_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VNet2_name'), 'BackSub')]"
            ],
            "sku": {
                "name": "Standard_RAGRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "dnsEndpointType": "Standard",
                "defaultToOAuthAuthentication": false,
                "publicNetworkAccess": "Enabled",
                "allowCrossTenantReplication": false,
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": false,
                "allowSharedKeyAccess": true,
                "networkAcls": {
                    "resourceAccessRules": [],
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [
                        {
                            "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VNet2_name'), 'BackSub')]",
                            "action": "Allow",
                            "state": "Succeeded"
                        }
                    ],
                    "ipRules": [
                        {
                            "value": "196.221.252.117",
                            "action": "Allow"
                        }
                    ],
                    "defaultAction": "Deny"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "requireInfrastructureEncryption": false,
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2023-04-01",
            "name": "[concat(parameters('storageAccounts_soragexx_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_soragexx_name'))]"
            ],
            "sku": {
                "name": "Standard_RAGRS",
                "tier": "Standard"
            },
            "properties": {
                "containerDeleteRetentionPolicy": {
                    "enabled": true,
                    "days": 7
                },
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "allowPermanentDelete": false,
                    "enabled": true,
                    "days": 7
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "apiVersion": "2023-04-01",
            "name": "[concat(parameters('storageAccounts_soragexx_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_soragexx_name'))]"
            ],
            "sku": {
                "name": "Standard_RAGRS",
                "tier": "Standard"
            },
            "properties": {
                "protocolSettings": {
                    "smb": {}
                },
                "cors": {
                    "corsRules": []
                },
                "shareDeleteRetentionPolicy": {
                    "enabled": true,
                    "days": 14
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices",
            "apiVersion": "2023-04-01",
            "name": "[concat(parameters('storageAccounts_soragexx_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_soragexx_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/tableServices",
            "apiVersion": "2023-04-01",
            "name": "[concat(parameters('storageAccounts_soragexx_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_soragexx_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Network/bastionHosts",
            "apiVersion": "2023-09-01",
            "name": "[parameters('bastionHosts_VNet1_Bastion_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_vnet1_bastion_pip_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VNet1_name'), 'AzureBastionSubnet')]"
            ],
            "sku": {
                "name": "Basic"
            },
            "properties": {
                "dnsName": "bst-fdb59bc4-514e-471b-8e57-b7aff47ad72e.bastion.azure.com",
                "scaleUnits": 2,
                "ipConfigurations": [
                    {
                        "name": "IpConf",
                        "id": "[concat(resourceId('Microsoft.Network/bastionHosts', parameters('bastionHosts_VNet1_Bastion_name')), '/bastionHostIpConfigurations/IpConf')]",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_vnet1_bastion_pip_name'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VNet1_name'), 'AzureBastionSubnet')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2023-09-01",
            "name": "[parameters('networkInterfaces_vm_jumper_01565_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VNet1_name'), 'Subnet1')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_my_nsg_name'))]"
            ],
            "kind": "Regular",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "id": "[concat(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_vm_jumper_01565_name')), '/ipConfigurations/ipconfig1')]",
                        "etag": "W/\"7713bf13-d857-4db1-b8f0-be1894a62e0e\"",
                        "type": "Microsoft.Network/networkInterfaces/ipConfigurations",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "privateIPAddress": "10.10.0.40",
                            "privateIPAllocationMethod": "Static",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VNet1_name'), 'Subnet1')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": true,
                "enableIPForwarding": false,
                "disableTcpStateTracking": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_my_nsg_name'))]"
                },
                "nicType": "Standard",
                "auxiliaryMode": "None",
                "auxiliarySku": "None"
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZones_project_com_name'), '/dns-vnet2-link')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_project_com_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_VNet2_name'))]"
            ],
            "properties": {
                "registrationEnabled": true,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_VNet2_name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2023-09-01",
            "name": "[concat(parameters('virtualNetworks_VNet1_name'), '/', parameters('virtualNetworks_VNet1_name'), '-to-vnet2')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_VNet1_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_VNet2_name'))]"
            ],
            "properties": {
                "peeringState": "Connected",
                "peeringSyncLevel": "FullyInSync",
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_VNet2_name'))]"
                },
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": false,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "doNotVerifyRemoteGateways": false,
                "remoteAddressSpace": {
                    "addressPrefixes": [
                        "10.20.0.0/16"
                    ]
                },
                "remoteVirtualNetworkAddressSpace": {
                    "addressPrefixes": [
                        "10.20.0.0/16"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2023-09-01",
            "name": "[concat(parameters('virtualNetworks_VNet2_name'), '/', parameters('virtualNetworks_VNet2_name'), '-to-vnet1')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_VNet2_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_VNet1_name'))]"
            ],
            "properties": {
                "peeringState": "Connected",
                "peeringSyncLevel": "FullyInSync",
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_VNet1_name'))]"
                },
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": false,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "doNotVerifyRemoteGateways": false,
                "remoteAddressSpace": {
                    "addressPrefixes": [
                        "10.10.0.0/16"
                    ]
                },
                "remoteVirtualNetworkAddressSpace": {
                    "addressPrefixes": [
                        "10.10.0.0/16"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2023-04-01",
            "name": "[concat(parameters('storageAccounts_soragexx_name'), '/default/my-share')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_soragexx_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_soragexx_name'))]"
            ],
            "properties": {
                "immutableStorageWithVersioning": {
                    "enabled": false
                },
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
            "apiVersion": "2023-04-01",
            "name": "[concat(parameters('storageAccounts_soragexx_name'), '/default/myshare')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices', parameters('storageAccounts_soragexx_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_soragexx_name'))]"
            ],
            "properties": {
                "accessTier": "TransactionOptimized",
                "shareQuota": 5120,
                "enabledProtocols": "SMB"
            }
        },
        {
            "type": "Microsoft.Network/azureFirewalls",
            "apiVersion": "2023-09-01",
            "name": "[parameters('azureFirewalls_Firewal_VNet2_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_FW_PIP_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VNet2_name'), 'AzureFirewallSubnet')]",
                "[resourceId('Microsoft.Network/firewallPolicies', parameters('firewallPolicies_FW_policy_01_name'))]"
            ],
            "properties": {
                "sku": {
                    "name": "AZFW_VNet",
                    "tier": "Standard"
                },
                "threatIntelMode": "Alert",
                "additionalProperties": {},
                "ipConfigurations": [
                    {
                        "name": "FW-PIP",
                        "id": "[concat(resourceId('Microsoft.Network/azureFirewalls', parameters('azureFirewalls_Firewal_VNet2_name')), '/azureFirewallIpConfigurations/FW-PIP')]",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_FW_PIP_name'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VNet2_name'), 'AzureFirewallSubnet')]"
                            }
                        }
                    }
                ],
                "networkRuleCollections": [],
                "applicationRuleCollections": [],
                "natRuleCollections": [],
                "firewallPolicy": {
                    "id": "[resourceId('Microsoft.Network/firewallPolicies', parameters('firewallPolicies_FW_policy_01_name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2023-09-01",
            "name": "[parameters('networkInterfaces_vm_web_01944_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VNet2_name'), 'BackSub')]",
                "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_MyLoadBalancer_name'), 'MyWebBackendPool')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_my_nsg_name'))]"
            ],
            "kind": "Regular",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "id": "[concat(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_vm_web_01944_name')), '/ipConfigurations/ipconfig1')]",
                        "etag": "W/\"90685ed0-36ae-4459-9ba3-1daea6d67294\"",
                        "type": "Microsoft.Network/networkInterfaces/ipConfigurations",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "privateIPAddress": "10.20.10.40",
                            "privateIPAllocationMethod": "Static",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VNet2_name'), 'BackSub')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4",
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_MyLoadBalancer_name'), 'MyWebBackendPool')]"
                                }
                            ]
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": [
                        "209.244.0.3",
                        "209.244.0.4"
                    ]
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "disableTcpStateTracking": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_my_nsg_name'))]"
                },
                "nicType": "Standard",
                "auxiliaryMode": "None",
                "auxiliarySku": "None"
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2023-09-01",
            "name": "[parameters('networkInterfaces_vm_web_02828_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VNet2_name'), 'BackSub')]",
                "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_MyLoadBalancer_name'), 'MyWebBackendPool')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_my_nsg_name'))]"
            ],
            "kind": "Regular",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "id": "[concat(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_vm_web_02828_name')), '/ipConfigurations/ipconfig1')]",
                        "etag": "W/\"24635c10-4a2d-4f91-9f6f-e8f59e9d3cba\"",
                        "type": "Microsoft.Network/networkInterfaces/ipConfigurations",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "privateIPAddress": "10.20.10.50",
                            "privateIPAllocationMethod": "Static",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VNet2_name'), 'BackSub')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4",
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_MyLoadBalancer_name'), 'MyWebBackendPool')]"
                                }
                            ]
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": [
                        "209.244.0.3",
                        "209.244.0.4"
                    ]
                },
                "enableAcceleratedNetworking": true,
                "enableIPForwarding": false,
                "disableTcpStateTracking": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_my_nsg_name'))]"
                },
                "nicType": "Standard",
                "auxiliaryMode": "None",
                "auxiliarySku": "None"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2023-09-01",
            "name": "[parameters('virtualNetworks_VNet2_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_my_nsg_name'))]",
                "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_Firewall_RT_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_VNet1_name'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.20.0.0/16"
                    ]
                },
                "encryption": {
                    "enabled": false,
                    "enforcement": "AllowUnencrypted"
                },
                "subnets": [
                    {
                        "name": "AzureFirewallSubnet",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VNet2_name'), 'AzureFirewallSubnet')]",
                        "properties": {
                            "addressPrefixes": [
                                "10.20.20.0/26"
                            ],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    },
                    {
                        "name": "GatewaySubnet",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VNet2_name'), 'GatewaySubnet')]",
                        "properties": {
                            "addressPrefixes": [
                                "10.20.30.0/24"
                            ],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    },
                    {
                        "name": "LBSub",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VNet2_name'), 'LBSub')]",
                        "properties": {
                            "addressPrefix": "10.20.40.0/24",
                            "serviceEndpoints": [],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    },
                    {
                        "name": "BackSub",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VNet2_name'), 'BackSub')]",
                        "properties": {
                            "addressPrefixes": [
                                "10.20.10.0/24"
                            ],
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_my_nsg_name'))]"
                            },
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_Firewall_RT_name'))]"
                            },
                            "serviceEndpoints": [
                                {
                                    "service": "Microsoft.Storage",
                                    "locations": [
                                        "eastus",
                                        "westus",
                                        "westus3"
                                    ]
                                }
                            ],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    }
                ],
                "virtualNetworkPeerings": [
                    {
                        "name": "vnet2-to-vnet1",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/virtualNetworkPeerings', parameters('virtualNetworks_VNet2_name'), concat(parameters('virtualNetworks_VNet2_name'), '-to-vnet1'))]",
                        "properties": {
                            "peeringState": "Connected",
                            "peeringSyncLevel": "FullyInSync",
                            "remoteVirtualNetwork": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_VNet1_name'))]"
                            },
                            "allowVirtualNetworkAccess": true,
                            "allowForwardedTraffic": false,
                            "allowGatewayTransit": false,
                            "useRemoteGateways": false,
                            "doNotVerifyRemoteGateways": false,
                            "remoteAddressSpace": {
                                "addressPrefixes": [
                                    "10.10.0.0/16"
                                ]
                            },
                            "remoteVirtualNetworkAddressSpace": {
                                "addressPrefixes": [
                                    "10.10.0.0/16"
                                ]
                            }
                        },
                        "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings"
                    }
                ],
                "enableDdosProtection": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2023-09-01",
            "name": "[concat(parameters('virtualNetworks_VNet2_name'), '/BackSub')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_VNet2_name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_my_nsg_name'))]",
                "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_Firewall_RT_name'))]"
            ],
            "properties": {
                "addressPrefixes": [
                    "10.20.10.0/24"
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_my_nsg_name'))]"
                },
                "routeTable": {
                    "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_Firewall_RT_name'))]"
                },
                "serviceEndpoints": [
                    {
                        "service": "Microsoft.Storage",
                        "locations": [
                            "eastus",
                            "westus",
                            "westus3"
                        ]
                    }
                ],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        }
    ]
}